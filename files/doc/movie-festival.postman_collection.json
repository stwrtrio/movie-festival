{
	"info": {
		"_postman_id": "6375d0af-fdc6-49a9-a71e-9c13768b8e07",
		"name": "movie-festival",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "4995030"
	},
	"item": [
		{
			"name": "movie",
			"item": [
				{
					"name": "create movie",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Inception\",\n    \"description\": \"A mind-bending thriller\",\n    \"duration\": 148,\n    \"genres\": [\"Sci-Fi\",\"Thriller\", \"Action\"],\n    \"watch_url\": \"http://example.com/inception.mp4\",\n    \"artists\": [\n        \"Leonardo DiCaprio\",\n        \"Joseph Gordon-Levitt\",\n        \"Elliot Page\"\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/api/admin/movies",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"admin",
								"movies"
							]
						}
					},
					"response": []
				},
				{
					"name": "update movie",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Inception\",\n    \"description\": \"A mind-bending thriller update\",\n    \"duration\": 150,\n    \"genres\": [\"Sci-Fi\",\"Thriller\"],\n    \"watch_url\": \"http://example.com/inception.mp4\",\n    \"artists\": [\n        \"Leonardo DiCaprio\",\n        \"Joseph Gordon-Levitt\",\n        \"Elliot Page\"\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/api/admin/movies/c613353d-2e01-4ab8-ac09-40fb8cc67334",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"admin",
								"movies",
								"c613353d-2e01-4ab8-ac09-40fb8cc67334"
							]
						}
					},
					"response": []
				},
				{
					"name": "get most view",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/admin/movies/most-viewed",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"admin",
								"movies",
								"most-viewed"
							]
						}
					},
					"response": []
				},
				{
					"name": "get most view genre",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/admin/movies/most-viewed-genres?page=1&page_size=5&sort_order=DESC",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"admin",
								"movies",
								"most-viewed-genres"
							],
							"query": [
								{
									"key": "page",
									"value": "1"
								},
								{
									"key": "page_size",
									"value": "5"
								},
								{
									"key": "sort_order",
									"value": "DESC"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "get all movies",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/movies?limit=10&offset=0&use-cache=true",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"movies"
							],
							"query": [
								{
									"key": "limit",
									"value": "10"
								},
								{
									"key": "offset",
									"value": "0"
								},
								{
									"key": "use-cache",
									"value": "true"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "search movies",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/movies/search?query=action&limit=10&offset=0",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"movies",
								"search"
							],
							"query": [
								{
									"key": "query",
									"value": "action"
								},
								{
									"key": "limit",
									"value": "10"
								},
								{
									"key": "offset",
									"value": "0"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "track movie views",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/movies/c613353d-2e01-4ab8-ac09-40fb8cc67334/view",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"movies",
								"c613353d-2e01-4ab8-ac09-40fb8cc67334",
								"view"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "User API Documentation",
			"item": [
				{
					"name": "user login",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"user123\",\n    \"password\": \"password1234\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/api/user/login",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"user",
								"login"
							]
						}
					},
					"response": []
				}
			],
			"description": "#### **1\\. User Login API**\n\n##### **API Endpoint**:\n\n```\nPOST http://localhost:8080/api/user/login\n\n ```\n\n##### **Description**:\n\nThis endpoint allows a user to log in to the system by providing their username and password. If the credentials are valid, a JWT token is generated and returned for authenticated access to protected endpoints.\n\n##### **Request**:\n\n- **Method**: `POST`\n    \n- **URL**: `/api/user/login`\n    \n- **Body (JSON)**:\n    \n\n``` json\n{\n    \"username\": \"user123\",\n    \"password\": \"password123\"\n}\n\n ```\n\n- **Fields**:\n    \n    - `username`: The username of the user trying to log in. (string)\n        \n    - `password`: The password associated with the provided username. (string)\n        \n\n##### **Response**:\n\n- **Success Response** (HTTP 200):\n    \n\n``` json\n{\n    \"code\": 200,\n    \"status\": \"success\",\n    \"message\": \"Access granted\",\n    \"data\": {\n        \"token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoiNThhYWU5NzgtNDhlOS00YTZhLWJmOWUtN2VkY2E3MDhiYmJkIiwidXNlcm5hbWUiOiJ1c2VyMTIzIiwicm9sZSI6InVzZXIiLCJleHAiOjE3MzMxMjc4Njd9.BcJt29ongfb3bUtObzZCbTtnxoJqDjOXL21aYK15ths\"\n    }\n}\n\n ```\n\n- **Fields**:\n    \n    - `code`: The HTTP status code. (integer)\n        \n    - `status`: The status of the request. (string)\n        \n    - `message`: A message indicating the result of the request. (string)\n        \n    - `data.token`: The JWT token generated for the user to access protected resources. (string)\n        \n- **Failure Response** (HTTP 401):\n    \n\n``` json\n{\n    \"code\": 401,\n    \"status\": \"failed\",\n    \"message\": \"invalid credentials\"\n}\n\n ```\n\n- **Fields**:\n    \n    - `code`: The HTTP status code. (integer)\n        \n    - `status`: The status of the request. (string)\n        \n    - `message`: An error message indicating that the credentials were invalid. (string)\n        \n\n##### **Error Handling**:\n\n- `400 Bad Request`: This error will be returned if the request body is malformed or missing required parameters.\n    \n- `401 Unauthorized`: If the credentials (username or password) are incorrect, this error will be returned."
		}
	]
}